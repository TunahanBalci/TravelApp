@model TravelApp.Models.ViewModels.CreateDestinationViewModel

@{
    ViewData["Title"] = "Create Destination";
}

<h2>Create Destination</h2>

<form asp-action="CreateDestination" asp-controller="CreateDestination" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Location" class="control-label"></label>
        <input asp-for="Location" class="form-control" />
        <span asp-validation-for="Location" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CityID" class="control-label">City</label>
        <select asp-for="CityID"
                asp-items="@(new SelectList(Model.Cities, "ID", "Name"))"
                class="form-control">
            <option value="">Select a city</option>
        </select>
        <span asp-validation-for="CityID" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Activities</label>
        @if (Model.Activities != null && Model.Activities.Any())

        {
            <div class="checkbox-group">
                @foreach (var activity in Model.Activities)

                {
                    <div class="form-check">
                        <input type="checkbox"
                               name="SelectedActivityIds"
                               id="activity_@activity.ID"
                               value="@activity.ID"
                               class="form-check-input"
                        @(Model.SelectedActivityIds.Contains(activity.ID) ? "checked" : "") />
                        <label class="form-check-label" for="activity_@activity.ID">@activity.Name</label>
                    </div>
                }
            </div>
        }
        else
        {
            <p>No activities available.</p>
        }
    </div>

    <div class="form-group">
        <label for="Attractions">Attractions</label>
        @if (Model.Attractions != null && Model.Attractions.Any())

        {
            <select asp-for="SelectedPreferencesIds"
                    asp-items='@(new SelectList(Model.Attractions, "ID", "Content"))'
                    multiple="multiple"
                    class="form-control">
            </select>
        }
        else
        {
            <p>No attractions available.</p>
        }
        <span asp-validation-for="SelectedPreferencesIds" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-success">Create</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
